# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RimjS1MDjZL99U5Mb5PPAsgsSbLYmzfd
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

given_data = pd.read_csv('CO2 Emissions_Canada.csv')

"""***Reading Data in sheet***"""

given_data.head()

given_data.info()

given_data.describe()

data = given_data.loc[:,['Engine Size(L)','CO2 Emissions(g/km)']]
data = data.rename(columns={'Engine Size(L)':'Engine_size','CO2 Emissions(g/km)': 'CO2_emisson'})

data.head()

"""***Data Visualization***"""

plt.figure(figsize=(12,3))
plt.subplot(1,2,1)
sns.boxplot(data.Engine_size)
plt.title("Engine Size")
plt.subplot(1,2,2)
sns.boxplot(data.CO2_emisson)
plt.title('CO2 Emisson')
plt.show()

plt.figure(figsize=(12,7))
sns.scatterplot(data.Engine_size,data.CO2_emisson)

data.corr()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error

"""***Training and Testing Set***"""

x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values
print(f'x:{x.shape}')
print(f'y:{y.shape}')

X_train, X_test,Y_train,Y_test =train_test_split(x,y,test_size=0.1,random_state=54)

col=['X_train','X_test','Y_train','Y_test']
test=[X_train, X_test,Y_train,Y_test]
for i in range(len(col)):
  print(f'{col[i]}: {test[i].shape}')

"""***Plotting Distribution of Training and Testing Dataset***"""

plt.figure(figsize=(14,8))
plt.scatter(X_train,Y_train)
plt.scatter(X_test,Y_test)

"""***Moddeling and Fitting***"""

regr =LinearRegression()
regr.fit(X_train,Y_train)

print(f'Coefficient:{regr.coef_[0]}')
print(f'Intercept:{regr.intercept_}')

"""***Regression Line***"""

plt.figure(figsize=(15,7))
plt.scatter(X_train,Y_train, s=25)
plt.scatter(X_test,Y_test, s=25)
plt.plot(x, regr.coef_*x +regr.intercept_,'-k',label='Regression Line')
plt.show()

"""***Making Prediction***"""

y_pred =regr.predict(X_test).astype(int)
pred=pd.DataFrame({'Engine_size':X_test[:,0],'Actual CO2':Y_test,'Prediction CO2':y_pred})
pred.head()

print(f'Engine Size: 9.4 L\nCO2 Emisson:{int(regr.predict([[9.4]])[0])} gm/km')